<nav class="nav">
    <div class="container nav-content">
        <div class="nav-logo">
            <a href="{{ path('app_home') }}">
                <img src="{{ asset('images/logo.png') }}" alt="LUCAR">
            </a>
        </div>
        
        <button class="nav-toggle" id="navToggle">
            <i class="fas fa-bars"></i>
        </button>
        
        <div class="nav-links" id="navLinks">
            <a href="{{ path('app_home') }}" class="nav-link {% if app.request.get('_route') == 'app_home' %}active{% endif %}">Home</a>
            <a href="{{ path('app_inscription') }}" class="nav-link {% if app.request.get('_route') == 'app_inscription' %}active{% endif %}">Inscription</a>
            <a href="#" class="nav-link">Reservation</a>
            <a href="#" class="nav-link">DIY part</a>
            <a href="#" class="nav-link">Devis</a>
            <a href="#" class="nav-link">Contact</a>
            <a href="#" class="nav-link">Avis</a>
        </div>

        <div class="nav-icons">
            <a href="#" class="nav-link user-icon" id="userIcon">
                <i class="fas fa-user" id="userIconSymbol"></i>
            </a>
            <a href="#" class="nav-link">
                <i class="fas fa-shopping-cart"></i>
            </a>
        </div>
    </div>
</nav>

<style>
.nav {
    padding: 20px 0;
    background-color: #000;
}

.nav-logo {
    padding: 15px 0;
    display: flex;
    align-items: center;
}

.nav-logo img {
    height: 120px;
    width: auto;
    margin: 10px 0;
    object-fit: contain;
    transform: translateY(5px);
}

.nav-content {
    display: flex;
    align-items: center;
    justify-content: space-between;
    padding: 0 15px;
    min-height: 150px;
}

.nav-links a {
    color: #fff;
}

.nav-links a:hover {
    color: #ccc;
}

.nav-icons {
    display: flex;
    align-items: center;
    gap: 15px;
}

.nav-icons .user-icon {
    background-color: #222;
    border-radius: 50%;
    width: 40px;
    height: 40px;
    display: flex;
    align-items: center;
    justify-content: center;
    transition: all 0.3s ease;
}

.nav-icons .user-icon.connected {
    background-color: #28a745;  /* Vert pour l'état connecté */
}

.nav-icons .user-icon i {
    font-size: 20px;
    color: #fff;
}

.nav-icons .user-icon:hover {
    background-color: #333;
    transform: scale(1.1);
}

.nav-icons .fa-shopping-cart {
    font-size: 20px;
    color: #fff;
}

.nav-link.active {
    color: #fff;
    font-weight: bold;
}

/* Style pour les boutons spécifiques */
.btn, 
button[type="submit"],
.btn-primary {
    color: #fff !important;
    text-decoration: none;
}

/* Bouton hamburger */
.nav-toggle {
    display: none;
    background: none;
    border: none;
    color: #fff;
    font-size: 24px;
    cursor: pointer;
    padding: 10px;
}

/* Styles responsive */
@media (max-width: 991px) {
    .nav-content {
        flex-wrap: wrap;
        min-height: auto;
    }

    .nav-logo img {
        height: 80px;  /* Logo plus petit sur mobile */
    }

    .nav-toggle {
        display: block;
    }

    .nav-links {
        display: none;  /* Caché par défaut sur mobile */
        width: 100%;
        order: 3;
        flex-direction: column;
        padding: 20px 0;
    }

    .nav-links.active {
        display: flex;
    }

    .nav-links a {
        padding: 15px 0;
        text-align: center;
        border-bottom: 1px solid #333;
    }

    .nav-icons {
        margin-left: auto;
    }
}

@media (max-width: 576px) {
    .nav-logo img {
        height: 60px;  /* Encore plus petit sur très petits écrans */
    }

    .nav-content {
        padding: 0 10px;
    }
}
</style>

<script>
// Vérifier si l'utilisateur est connecté au chargement de la page
document.addEventListener('DOMContentLoaded', function() {
    const token = localStorage.getItem('token');
    const userIcon = document.getElementById('userIcon');
    
    if (token) {
        userIcon.classList.add('connected');
    }
});

// Gestion du clic sur l'icône utilisateur
document.getElementById('userIcon').addEventListener('click', async function(e) {
    e.preventDefault();
    const token = localStorage.getItem('token');
    
    if (!token) {
        // Si non connecté, afficher le formulaire de connexion
        const formHTML = `
            <div class="login-popup" id="loginPopup">
                <form id="loginForm">
                    <div class="form-group">
                        <input type="email" id="loginEmail" placeholder="Email" required>
                    </div>
                    <div class="form-group">
                        <input type="password" id="loginPassword" placeholder="Mot de passe" required>
                    </div>
                    <button type="submit">Se connecter</button>
                </form>
            </div>
        `;
        
        // Insérer le formulaire
        if (!document.getElementById('loginPopup')) {
            this.insertAdjacentHTML('afterend', formHTML);
            
            // Gérer la soumission du formulaire
            document.getElementById('loginForm').addEventListener('submit', async function(e) {
                e.preventDefault();
                
                try {
                    const response = await fetch('/api/login_check', {
                        method: 'POST',
                        headers: {
                            'Content-Type': 'application/json'
                        },
                        body: JSON.stringify({
                            username: document.getElementById('loginEmail').value,
                            password: document.getElementById('loginPassword').value
                        })
                    });

                    const data = await response.json();

                    if (response.ok) {
                        localStorage.setItem('token', data.token);
                        document.getElementById('userIcon').classList.add('connected');
                        document.getElementById('loginPopup').remove();
                        window.location.reload();
                    } else {
                        alert('Email ou mot de passe incorrect');
                    }
                } catch (error) {
                    alert('Erreur lors de la connexion');
                    console.error('Erreur:', error);
                }
            });
        }
    } else {
        // Si connecté, déconnexion
        localStorage.removeItem('token');
        this.classList.remove('connected');
        window.location.reload();
    }
});

// Fermer le popup si on clique en dehors
document.addEventListener('click', function(e) {
    const loginPopup = document.getElementById('loginPopup');
    const userIcon = document.getElementById('userIcon');
    
    if (loginPopup && !loginPopup.contains(e.target) && e.target !== userIcon) {
        loginPopup.remove();
    }
});

// Ajout du script pour le menu hamburger
document.getElementById('navToggle').addEventListener('click', function() {
    const navLinks = document.getElementById('navLinks');
    navLinks.classList.toggle('active');
});

// Fermer le menu mobile lors du clic sur un lien
document.querySelectorAll('.nav-links a').forEach(link => {
    link.addEventListener('click', () => {
        if (window.innerWidth <= 991) {
            document.getElementById('navLinks').classList.remove('active');
        }
    });
});

// Fermer le menu mobile lors du redimensionnement
window.addEventListener('resize', () => {
    if (window.innerWidth > 991) {
        document.getElementById('navLinks').classList.remove('active');
    }
});
</script> 