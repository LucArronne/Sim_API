nelmio_api_doc:
    documentation:
        servers:
            - url: https://localhost:8000
              description: API SimRacing
        info:
            title: SimRacing API
            description: API Documentation pour SimRacing
            version: 1.0.0
        components:
            schemas:
                LoginRequest:
                    type: object
                    required:
                        - username
                        - password
                    properties:
                        username:
                            type: string
                            example: admin@simracing.com
                        password:
                            type: string
                            example: admin
                Token:
                    type: object
                    properties:
                        token:
                            type: string
                            example: "eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiJ9..."
                User:
                    type: object
                    properties:
                        id:
                            type: integer
                        email:
                            type: string
                        firstName:
                            type: string
                        lastName:
                            type: string
                        createdAt:
                            type: string
                            format: date-time
                UserCreate:
                    type: object
                    required:
                        - email
                        - password
                        - firstName
                        - lastName
                    properties:
                        email:
                            type: string
                            format: email
                            example: user@example.com
                        password:
                            type: string
                            example: password123
                        firstName:
                            type: string
                            example: John
                        lastName:
                            type: string
                            example: Doe
                Contact:
                    type: object
                    required:
                        - email
                        - name
                        - subject
                        - message
                    properties:
                        email:
                            type: string
                            format: email
                            example: john@example.com
                        name:
                            type: string
                            example: John Doe
                        subject:
                            type: string
                            example: Demande d'information
                        message:
                            type: string
                            example: Je souhaiterais avoir plus d'informations...
                Disponibilite:
                    type: object
                    properties:
                        id:
                            type: integer
                            readOnly: true
                        dateDebut:
                            type: string
                            format: date-time
                        dateFin:
                            type: string
                            format: date-time
                        isAvailable:
                            type: boolean
                        title:
                            type: string
                        description:
                            type: string
                Reservation:
                    type: object
                    properties:
                        id:
                            type: integer
                            readOnly: true
                        status:
                            type: string
                        createdAt:
                            type: string
                            format: date-time
                            readOnly: true
                        notes:
                            type: string
                        user:
                            $ref: '#/components/schemas/User'
                        disponibilite:
                            $ref: '#/components/schemas/Disponibilite'
                Avis:
                    type: object
                    properties:
                        id:
                            type: integer
                            readOnly: true
                        note:
                            type: integer
                            minimum: 1
                            maximum: 5
                        commentaire:
                            type: string
                        createdAt:
                            type: string
                            format: date-time
                            readOnly: true
                        user:
                            $ref: '#/components/schemas/User'
            securitySchemes:
                Bearer:
                    type: http
                    scheme: bearer
                    bearerFormat: JWT
                    description: 'Entrer le token JWT (sans le préfixe Bearer)'
        security:
            - Bearer: []
        paths:
            /api/login_check:
                post:
                    tags:
                        - Authentication
                    summary: Connexion pour obtenir un token JWT
                    requestBody:
                        required: true
                        content:
                            application/json:
                                schema:
                                    $ref: '#/components/schemas/LoginRequest'
                    responses:
                        '200':
                            description: Connexion réussie
                            content:
                                application/json:
                                    schema:
                                        $ref: '#/components/schemas/Token'
            /api/contact:
                post:
                    tags:
                        - Contact
                    summary: Envoyer un message de contact
                    description: Permet d'envoyer un message via le formulaire de contact
                    requestBody:
                        required: true
                        content:
                            application/json:
                                schema:
                                    $ref: '#/components/schemas/Contact'
                    responses:
                        '201':
                            description: Message envoyé avec succès
                            content:
                                application/json:
                                    schema:
                                        type: object
                                        properties:
                                            success:
                                                type: boolean
                                                example: true
                                            message:
                                                type: string
                                                example: Votre message a été envoyé avec succès
                        '400':
                            description: Données invalides
                            content:
                                application/json:
                                    schema:
                                        type: object
                                        properties:
                                            success:
                                                type: boolean
                                                example: false
                                            message:
                                                type: string
                                                example: Données invalides
                                            errors:
                                                type: array
                                                items:
                                                    type: string
                                                example: ["L'email est requis", "Le message est requis"]
            /api/avis/{id}:
                delete:
                    tags:
                        - Avis
                    summary: Supprimer un avis
                    responses:
                        '200':
                            description: Avis supprimé avec succès
                        '404':
                            description: Avis non trouvé
            /api/avis/{id}/validate:
                patch:
                    tags:
                        - Avis
                    summary: Valider un avis
                    responses:
                        '200':
                            description: Avis validé avec succès
                        '404':
                            description: Avis non trouvé
    areas:
        path_patterns:
            - ^/api(?!/doc$)
        host_patterns: []
