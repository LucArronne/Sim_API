{% extends 'base.html.twig' %}

{% block title %}Inscription - LUCAR Simracing{% endblock %}

{% block stylesheets %}
{{ parent() }}
<style>
    .inscription-container {
        max-width: 600px;
        margin: 50px auto;
        padding: 20px;
    }

    .form-group {
        margin-bottom: 20px;
    }

    .form-group label {
        display: block;
        margin-bottom: 5px;
        font-weight: bold;
        color: #333;
    }

    .form-group input {
        width: 100%;
        padding: 10px;
        border: 1px solid #ddd;
        border-radius: 4px;
    }

    .form-submit {
        background-color: #007bff;
        color: white;
        padding: 12px 20px;
        border: none;
        border-radius: 4px;
        cursor: pointer;
        width: 100%;
        font-size: 16px;
    }

    .form-submit:hover {
        background-color: #0056b3;
    }

    .error-message {
        color: #dc3545;
        margin-top: 5px;
        font-size: 14px;
        display: none;
    }

    .password-requirements {
        font-size: 0.9em;
        color: #666;
        margin-top: 5px;
    }
</style>
{% endblock %}

{% block body %}
<div class="inscription-container">
    <h2 class="text-center mb-4">Inscription</h2>
    
    <form id="inscription-form" method="post">
        <div class="form-group">
            <label for="email">Email</label>
            <input type="email" id="email" name="email" required>
        </div>

        <div class="form-group">
            <label for="firstName">Prénom</label>
            <input type="text" id="firstName" name="firstName" required>
        </div>

        <div class="form-group">
            <label for="lastName">Nom</label>
            <input type="text" id="lastName" name="lastName" required>
        </div>

        <div class="form-group">
            <label for="password">Mot de passe</label>
            <input type="password" id="password" name="password" required>
            <div class="password-requirements">
                Le mot de passe doit contenir au moins 6 caractères et une majuscule
            </div>
        </div>

        <div class="form-group">
            <label for="confirmPassword">Confirmer le mot de passe</label>
            <input type="password" id="confirmPassword" name="confirmPassword" required>
        </div>

        <button type="submit" class="form-submit">S'inscrire</button>
    </form>
</div>
{% endblock %}

{% block javascripts %}
{{ parent() }}
<script>
document.addEventListener('DOMContentLoaded', function() {
    const form = document.getElementById('inscription-form');
    const passwordInput = document.getElementById('password');
    const confirmPasswordInput = document.getElementById('confirmPassword');
    
    // Fonction de validation du mot de passe
    function validatePassword(password) {
        const minLength = 6;
        const hasUpperCase = /[A-Z]/.test(password);
        
        const errors = [];
        if (password.length < minLength) {
            errors.push(`Le mot de passe doit contenir au moins ${minLength} caractères`);
        }
        if (!hasUpperCase) {
            errors.push('Le mot de passe doit contenir au moins une majuscule');
        }
        
        return errors;
    }

    // Validation en temps réel du mot de passe
    passwordInput.addEventListener('input', function() {
        const errors = validatePassword(this.value);
        const requirementsDiv = document.querySelector('.password-requirements');
        
        if (errors.length > 0) {
            requirementsDiv.style.color = '#dc3545';
            requirementsDiv.innerHTML = errors.join('<br>');
        } else {
            requirementsDiv.style.color = '#28a745';
            requirementsDiv.textContent = 'Mot de passe valide ✓';
        }
    });
    
    form.addEventListener('submit', async function(e) {
        e.preventDefault();
        
        const password = passwordInput.value;
        const confirmPassword = confirmPasswordInput.value;
        
        // Validation du mot de passe
        const passwordErrors = validatePassword(password);
        if (passwordErrors.length > 0) {
            alert(passwordErrors.join('\n'));
            return;
        }
        
        if (password !== confirmPassword) {
            alert('Les mots de passe ne correspondent pas');
            return;
        }
        
        try {
            const response = await fetch('/api/register', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json'
                },
                body: JSON.stringify({
                    email: document.getElementById('email').value,
                    password: password,
                    firstName: document.getElementById('firstName').value,
                    lastName: document.getElementById('lastName').value
                })
            });

            const data = await response.json();

            if (response.status === 201) {
                alert('Votre compte a été créé avec succès ! Vous pouvez maintenant vous connecter.');
                window.location.href = '/';
            } else {
                alert(data.message || 'Une erreur est survenue lors de l\'inscription');
            }
        } catch (error) {
            console.error('Erreur:', error);
            alert('Une erreur est survenue lors de l\'inscription');
        }
    });
});
</script>
{% endblock %} 